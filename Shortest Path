#include <iostream>
using namespace std;

const int rows = 5;
const int cols = 6;

string path[rows][cols];

int cost(int i, int j){
    //i is the row, j is the col
    int weight[rows][cols]={
        {3,4,1,2,8,6},
        {6,1,8,2,7,4},
        {5,9,3,9,9,5},
        {8,4,1,3,2,6},
        {3,7,2,8,6,4}
    };

    //base case
    if(j==0) 
    return weight[i][0];
    int row_above = (i == 0 ? 4 : (i - 1));
    int row_below = (i == 4 ? 0 : (i + 1));

    //recursive call
    int direction[3];
    int left = 0, up = 1, down = 2;
    direction[left] = weight[i][j] + cost(i, j-1);
    left= weight[i][j] + cost(i, j-1);
    up = weight[i][j] + cost((i-1+rows)%rows , j-1);
    down = weight[i][j] + cost((i+1)%rows , j-1);

    //find the value of the shortest path through the cell (i, j)
    int min = direction[0];
    for(int i= 1; i <= 2; i++){
        if(direction[i] < min)
            min=direction[i];
        }
        if(direction[i] == left) path[i][j] = path[i][j] + to_string(i);
           

        cost[i][j] = minimum;
            
    }
}
int main(){
    int ex[rows];

    //get the shortest path out of each cell on the right
    for(int i=0; i < rows; i++)
        ex[i]=cost(i, cols-1);
    
    //now find the smallest of them
    int min =ex[0];
    for(int i = 0; i < rows; i++){
        if(ex[i]<min){
            min=ex[i];
        }
    }
    cout << "the cost is " << min << " and the path taken is" << endl;
    system("PAUSE");
    return EXIT_SUCCESS;
}
