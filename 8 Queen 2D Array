//Program will place 8 queens on the chess board on a 2 dimensional array
#include <iostream>
using namespace std;
int main() {
 int b[8][8] = {0}, row, col = 0;
 int solutions = 0;
 //place the queen in the upper left square
 b[0][0] = 1;
nc:
 //go to the next column
 col++;
 //if we're in column 8, we found a solution and print
 if(col == 8)goto print;
 row = -1;
nr:
 //go to the next row
 row++;
 //if we're in row 8, we're off the board and must backtrack
 if(row == 8) goto backtrack;
 //row test
 for (int i = 0; i < col; i++){
 if(b[row][i] == 1) goto nr; //checks rows if they have a queen, if not then queen is placed.
 }
 //diagonal test (up)
 for (int i = 1; (row - i) >= 0 && (col - i) >= 0; i++){
 if(b[row-i][col-i] == 1) goto nr; //checks if
 }

 //other diagonal test (down)
 for (int i = 1; (row + i) < 8 && (col - i) >= 0; i++){
 if(b[row+i][col-i] == 1) goto nr;
 }
 //if we pass all the tests, place the queen and go to the next column
 b[row][col] = 1;
 goto nc;
backtrack:
 //goes to the previous column
 col--;
 //if we're in column -1, we have found all solutions and can terminate the program
 if(col == -1) return 0;
 //looks for the column with a queen in it and set r to the row number of that slot.
 row = 0;
 //find the queen by going through the column until a 1 is found
 while(b[row][col] != 1){
 row++;
 }
 //change the 1 back to a 0 and go to the next row
 b[row][col] = 0;
 goto nr;
print:
 solutions++;
 cout << "Solution " << solutions << ":\n";
 //print the 2D array
 for(int i = 0; i < 8; i++){
 for(int j = 0; j < 8; j++){
 cout<< b[i][j];
 }
 cout << endl;
 }
 cout << endl;
 goto backtrack;
 return 0;
}
